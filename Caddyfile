# HTTP only configuration for reverse proxy setup
:80 {
	# Enable file server for Hugo built site
	root * /app/builds/current
	file_server

	# Enable gzip compression
	encode gzip zstd

	# Enable caching for static files
	header {
			Cache-Control "public, max-age=31536000"
	}

	# Cache different file types
	@static {
			path *.css *.js *.jpg *.jpeg *.png *.gif *.ico *.webp
	}
	header @static {
			Cache-Control "public, max-age=31536000"
	}

	# HTML files with shorter cache
	@html {
			path *.html *.htm
	}
	header @html {
			Cache-Control "public, max-age=3600"
	}

	# Security headers (some may be overridden by reverse proxy)
	header {
		X-Content-Type-Options nosniff
		X-Frame-Options SAMEORIGIN
		X-XSS-Protection "1; mode=block"
		Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
		Referrer-Policy strict-origin-when-cross-origin
		# Remove Server header for security
		-Server
	}

	# Protected update endpoint
	route /update {
		@authorized header Authorization "Bearer {$UPDATE_API_KEY}"
		exec @authorized update-site.sh {
			timeout 300s
			pass_thru
		}
		handle @authorized {
			respond "Site update initiated" 202 {
				close
			}
		}
		handle {
			respond "Unauthorized" 401
		}
	}

	# Handle Hugo's pretty URLs
	try_files {path} {path}/ {path}/index.html

	# 404 page
	handle_errors {
		@404 expression `{http.error.status_code} == 404`
		handle @404 {
			rewrite * /404.html
			file_server
		}
	}

	# Log access with real client IP (from reverse proxy headers)
	log {
		output stdout
		format console
		level INFO
	}
}
